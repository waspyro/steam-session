enum E_AUTH_TOKEN_PLATFORM_TYPE {
    E_AUTH_TOKEN_PLATFORM_TYPE_UNKNOWN = 0;
    E_AUTH_TOKEN_PLATFORM_TYPE_CLIENT = 1;
    E_AUTH_TOKEN_PLATFORM_TYPE_BROWSER = 2;
    E_AUTH_TOKEN_PLATFORM_TYPE_APP = 3;
}

enum E_SESSION_PERSISTENCE {
    E_SESSION_PERSISTENCE_EPHEMERAL = 0;
    E_SESSION_PERSISTENCE_PERSISTENT = 1;
}

enum E_AUTH_SESSION_GUARD_TYPE {
    E_AUTH_SESSION_GUARD_TYPE_UNKNOWN = 0;
    E_AUTH_SESSION_GUARD_TYPE_NONE = 1;
    E_AUTH_SESSION_GUARD_TYPE_EMAILCODE = 2;
    E_AUTH_SESSION_GUARD_TYPE_DEVICECODE = 3;
    E_AUTH_SESSION_GUARD_TYPE_DEVICECONFIRMATION = 4;
    E_AUTH_SESSION_GUARD_TYPE_EMAILCONFIRMATION = 5;
    E_AUTH_SESSION_GUARD_TYPE_MACHINETOKEN = 6;
}

message AuthDeviceDetails {
    optional string device_friendly_name = 1;
    optional .E_AUTH_TOKEN_PLATFORM_TYPE platform_type = 2 [default = E_AUTH_TOKEN_PLATFORM_TYPE_UNKNOWN];
    optional int32 os_type = 3;
    optional uint32 gaming_device_type = 4;
}

message AuthAllowedConfirmation {
    optional .E_AUTH_SESSION_GUARD_TYPE confirmation_type = 1 [default = E_AUTH_SESSION_GUARD_TYPE_UNKNOWN];
    optional string associated_message = 2;
}

message GetPasswordRsaPublicKeyReq {
    optional string account_name = 1;
}

message GetPasswordRsaPublicKeyRes {
    optional string publickey_mod = 1;
    optional string publickey_exp = 2;
    optional uint64 timestamp = 3;
}

message BeginAuthSessionViaCredentialsReq {
    optional string device_friendly_name = 1;
    optional string account_name = 2;
    optional string encrypted_password = 3;
    optional uint64 encryption_timestamp = 4;
    optional bool remember_login = 5;
    optional .E_AUTH_TOKEN_PLATFORM_TYPE platform_type = 6 [default = E_AUTH_TOKEN_PLATFORM_TYPE_UNKNOWN];
    optional .E_SESSION_PERSISTENCE persistence = 7 [default = E_SESSION_PERSISTENCE_PERSISTENT];
    optional string website_id = 8 [default = "Unknown"];
    optional .AuthDeviceDetails device_details = 9;
    optional string guard_data = 10;
}

message BeginAuthSessionViaCredentialsRes {
    optional uint64 client_id = 1;
    optional bytes request_id = 2;
    optional float interval = 3;
    repeated .AuthAllowedConfirmation allowed_confirmations = 4;
    optional uint64 steamid = 5;
    optional string weak_token = 6;
}

message UpdateAuthSessionWithSteamGuardCodeReq {
    optional uint64 client_id = 1;
    optional fixed64 steamid = 2;
    optional string code = 3;
    optional .E_AUTH_SESSION_GUARD_TYPE code_type = 4 [default = E_AUTH_SESSION_GUARD_TYPE_UNKNOWN];
}

message UpdateAuthSessionWithSteamGuardCodeRes {}

message PollAuthSessionStatusReq {
    optional uint64 client_id = 1;
    optional bytes request_id = 2;
    optional fixed64 token_to_revoke = 3;
}

message PollAuthSessionStatusRes {
    optional uint64 new_client_id = 1;
    optional string new_challenge_url = 2;
    optional string refresh_token = 3;
    optional string access_token = 4;
    optional bool had_remote_interaction = 5;
    optional string account_name = 6;
    optional string new_guard_data = 7;
}